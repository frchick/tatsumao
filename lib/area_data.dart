import 'package:flutter/material.dart';
import 'package:flutter_map/flutter_map.dart';
import 'package:latlong2/latlong.dart';

// エリアデータ
AreaData areaData = AreaData();

class AreaData
{
  List<Polygon> makePolygons()
  {
    List<Polygon> polygons = [];

    // 南足柄丸太の森
    var polygon0 = Polygon(
      points: [
        LatLng(35.30934418, 139.08071112),
        LatLng(35.3096354, 139.0799088),
        LatLng(35.30981369, 139.07927884),
        LatLng(35.3101511, 139.07868832),
        LatLng(35.31047469, 139.07835212),
        LatLng(35.3104999, 139.07810418),
        LatLng(35.31045367, 139.07779741),
        LatLng(35.31023923, 139.07749585),
        LatLng(35.31001339, 139.07680348),
        LatLng(35.31001042, 139.07649741),
        LatLng(35.31008443, 139.07629882),
        LatLng(35.31009283, 139.07595842),
        LatLng(35.31051728, 139.07618535),
        LatLng(35.31063494, 139.07616014),
        LatLng(35.31113117, 139.07567521),
        LatLng(35.31142536, 139.07569601),
        LatLng(35.3120583, 139.07661422),
        LatLng(35.31221282, 139.07667662),
        LatLng(35.31243865, 139.07660233),
        LatLng(35.31261397, 139.07614471),
        LatLng(35.31266449, 139.07545829),
        LatLng(35.31274769, 139.07517302),
        LatLng(35.31333606, 139.07494124),
        LatLng(35.31369226, 139.0745922),
        LatLng(35.31396542, 139.07457959),
        LatLng(35.31458737, 139.07443671),
        LatLng(35.31483111, 139.07416355),
        LatLng(35.31541682, 139.07326068),
        LatLng(35.31560769, 139.07246359),
        LatLng(35.31517905, 139.07220304),
        LatLng(35.31513282, 139.07203915),
        LatLng(35.3126408, 139.07013546),
        LatLng(35.31074384, 139.0684345),
        LatLng(35.30894101, 139.06648459),
        LatLng(35.30727686, 139.06484145),
        LatLng(35.30712977, 139.06477841),
        LatLng(35.3068188, 139.06498853),
        LatLng(35.30634393, 139.06517764),
        LatLng(35.30604556, 139.06542979),
        LatLng(35.30463775, 139.06577018),
        LatLng(35.30444024, 139.06592147),
        LatLng(35.30406623, 139.06652661),
        LatLng(35.30361657, 139.06756881),
        LatLng(35.30243149, 139.06947249),
        LatLng(35.30203791, 139.07046873),
        LatLng(35.30163783, 139.07097306),
      ],
      color: const Color.fromRGBO(255, 0, 0, 0.3),
      isFilled: true,
    );
    polygons.add(polygon0);

    // 大雄山
    var polygon1_0 = Polygon(
      points: [
        LatLng(35.30934418, 139.08071112),
        LatLng(35.30163783, 139.07097306),
        LatLng(35.30142351, 139.0710403),
        LatLng(35.29942737, 139.07107392),
        LatLng(35.29917522, 139.07113275),
        LatLng(35.298776, 139.0714017),
        LatLng(35.29809521, 139.07200265),
        LatLng(35.29774641, 139.07259098),
        LatLng(35.29749006, 139.07326757),
        LatLng(35.29749847, 139.07467117),
        LatLng(35.29754889, 139.07497794),
        LatLng(35.29793972, 139.07615041),
        LatLng(35.29862891, 139.07732708),
        LatLng(35.29917943, 139.07798266),
        LatLng(35.29949461, 139.07849115),
        LatLng(35.30037711, 139.07954175),
        LatLng(35.30074692, 139.07986113),
        LatLng(35.30115035, 139.08039063),
        LatLng(35.30217574, 139.08124792),
        LatLng(35.30266742, 139.08124372),
        LatLng(35.3028187, 139.08115127),
        LatLng(35.30399832, 139.07962618),
        LatLng(35.30456292, 139.07934685),
        LatLng(35.30539706, 139.0792909),
        LatLng(35.30577148, 139.07969503),
        LatLng(35.30583685, 139.07984657),
        LatLng(35.30610132, 139.08163842),
      ],
      color: const Color.fromRGBO(255, 0, 0, 0.3),
      isFilled: true,
    );
    polygons.add(polygon1_0);

    var polygon1_1 = Polygon(
      points: [
        LatLng(35.30934418, 139.08071112),
        LatLng(35.30610132, 139.08163842),
        LatLng(35.30625881, 139.08208415),
        LatLng(35.30696307, 139.08317768),
        LatLng(35.30785754, 139.08494401),
        LatLng(35.30830719, 139.08541888),
        LatLng(35.30871903, 139.08568153),
        LatLng(35.30950908, 139.08642956),
        LatLng(35.30999235, 139.08704101),
        LatLng(35.3100659, 139.08753059),
        LatLng(35.30999656, 139.08803698),
        LatLng(35.30997344, 139.08861901),
        LatLng(35.3100764, 139.0894826),
        LatLng(35.31049034, 139.0898293),
        LatLng(35.31064373, 139.09031258),
        LatLng(35.31062271, 139.0905353),
        LatLng(35.31087276, 139.09130224),
        LatLng(35.31158952, 139.09225965),
        LatLng(35.31201396, 139.0934069),
        LatLng(35.31212742, 139.0939322),
        LatLng(35.31236276, 139.09389438),
        LatLng(35.31268239, 139.09369523),
        LatLng(35.31318755, 139.09289292),
        LatLng(35.31325292, 139.09184693),
        LatLng(35.31307463, 139.08996892),
        LatLng(35.31263171, 139.08938101),
        LatLng(35.31202657, 139.08807826),
        LatLng(35.31182485, 139.08720416),
        LatLng(35.31135418, 139.08593924),
        LatLng(35.31132056, 139.08542235),
        LatLng(35.31090032, 139.08390108),
        LatLng(35.31065658, 139.08345142),
        LatLng(35.31041284, 139.08276223),
      ],
      color: const Color.fromRGBO(255, 0, 0, 0.3),
      isFilled: true,
    );
    polygons.add(polygon1_1);

    // 足柄ふれあいの村
    var polygon2 = Polygon(
      points: [
        LatLng(35.31300116, 139.07763627),
        LatLng(35.31281599, 139.07774332),
        LatLng(35.31245879, 139.07815936),
        LatLng(35.3122949, 139.07851236),
        LatLng(35.31229069, 139.07903346),
        LatLng(35.31244198, 139.07955456),
        LatLng(35.31293786, 139.08039083),
        LatLng(35.31310176, 139.08052531),
        LatLng(35.3135346, 139.08055473),
        LatLng(35.31396745, 139.08024795),
        LatLng(35.3140557, 139.08012608),
        LatLng(35.31407671, 139.07978149),
        LatLng(35.31402208, 139.07967222),
        LatLng(35.31392829, 139.07865254),
        LatLng(35.31359547, 139.07798691),
        LatLng(35.31338746, 139.07771947),
        LatLng(35.31322106, 139.0776125),
      ],
      color: const Color.fromRGBO(255, 0, 0, 0.3),
      isFilled: true,
    );
    polygons.add(polygon2);

    return polygons;
  }
}
